' TextPipe Standard 10.0.6 Single User Edition
' Purchased by: David Haslam
' David Haslam

' This VBScript code was generated by TextPipe -
' the fastest search and replace tool on the planet
'   Download from: http://www.DataMystic.com

Option Explicit 

'The global TextPipe Application object
dim TextPipeApp
'The global TextPipe Filter Window
dim TPWindow


'connect to TextPipe if we haven't already
sub vb_connectTextPipe()

  on error resume next
  Set TextPipeApp = CreateObject("TextPipe.Application")

  if Err.Number <> 0 then
    MsgBox "TextPipe is not installed." & vbCrLF & _
      vbCrLf & _
      "Please download and install it from" & vbCrLF & _
      "http://www.DataMystic.com", _
      vbExclamation + vbOkOnly, _
      "TextPipe needs to be installed"
  end if
  Set TPWindow = TextPipeApp.newWindow

end sub


'disconnect from TextPipe
sub vb_disconnectTextPipe()

  if isObject( TPWindow ) then
    TPWindow.closeWithoutSave
    Set TPWindow = Nothing
  end if

  if isObject( TextPipeApp ) then
    Set TextPipeApp = Nothing
  end if

end sub

' 1) Use this code to simply load the saved filter:

sub vb_load_filter()

  vb_connectTextPipe
  TPWindow.openFilter "C:\Users\David\TextPipe Filters\USFM tag statistics.fll"
  if TPWindow.execute = false then MsgBox "ERROR " & vbCrLF & TPWindow.errorText
  vb_disconnectTextPipe

end sub   'End subroutine 


' 2) Use this code to build the filter from scratch, from a web page,
'    ASP script, .vbs file etc.

sub vb_build_filter( TPWindow )

dim f1,f2,f3,f4,f5,f6

TPWindow.startFilters
TPWindow.clearAllFilters
TPWindow.logEnabled = true
TPWindow.logFilename = "textpipe.log"
TPWindow.logAppend = true
TPWindow.logThreshold = 500
TPWindow.logCommentFilters = false
TPWindow.inputMode = 1
TPWindow.inputBinaryFiles = 2
TPWindow.inputBinarySampleSize = 100
TPWindow.inputPromptOnEach = false
TPWindow.inputPromptOnReadOnly = false
TPWindow.inputDeleteFiles = false
TPWindow.inputInsideCompressed = false
f1 = TPWindow.addCommentFilter( "USFM tag statistics" & vbCrLf & vbCrLf & "Outputs a 'count duplicate lines' list for the SFM tags." & vbCrLf & vbCrLf & "Start and close tags in a tag pair are listed separately." & vbCrLf & vbCrLf & " Excludes + and " & _
  "similar parameters used in footnotes & cross-references " & vbCrLf & " Excludes optional lin" & _
  "e break // and ~" & vbCrLf & " Excludes delimiters | within \fig ...\fig*" & vbCrLf & vbCrLf & "Filter improved" & _
  " to catch all the tags" & vbCrLf & "Filter enhanced to add tag descriptions" & vbCrLf & "Filter improved" & _
  " to include nested tags with \+" & vbCrLf )
 TPWindow.startSubfilters
 f2 = TPWindow.addCommentFilter( "Workaround for unseparated tag groups" & vbCrLf & vbCrLf & " e.g. \global\cnum=14\relax" & vbCrLf & "      \nul" & _
  "l\null\eject" )
  TPWindow.startSubfilters
  f3 = TPWindow.addReplaceFilter( "(\w|\d)(\\)(\w)", "$1 $2$$3", 1, true, false, false, false, false, false, false, 0 )
TPWindow.setPerl 4096, false, false, false, true
  f3 = TPWindow.addReplaceFilter( ">", " >", 1, true, false, false, false, false, false, false, 0 )
TPWindow.setPerl 4096, false, false, false, true

TPWindow.endSubfilters

 f2 = TPWindow.addCommentFilter( "Extract tags" & vbCrLf & vbCrLf & " NB. Does it now catch \cnum=## ?" )
  TPWindow.startSubfilters
  f3 = TPWindow.addReplaceFilter( "\\(\w+|\+\w+)(\s|\*|=\d+)", "\\$1$$2" & vbCrLf, 1, true, false, false, false, true, false, false, 0 )
TPWindow.setPerl 4096, false, false, false, true
TPWindow.endSubfilters

 f2 = TPWindow.addCommentFilter( "Remove blanks" )
  TPWindow.startSubfilters
  f3 = TPWindow.addSimpleFilter( 11, "" )
  f3 = TPWindow.addSimpleFilter( 10, "" )
TPWindow.endSubfilters

 f2 = TPWindow.addCommentFilter( "Counted list of tags" )
  TPWindow.startSubfilters
  f3 = TPWindow.addDuplicatesFilter( 1, false, 1, 15, true, "%5.5d\t%s" )
  f3 = TPWindow.addStringFilter( 19, "Count\tSFM tag" & vbCrLf & "-----\t--------" & vbCrLf, false )
TPWindow.endSubfilters

 f2 = TPWindow.addCommentFilter( "Add tag descriptions +" & vbCrLf & vbCrLf & "   From USFM Reference version 2.35" & vbCrLf & vbCrLf & " + The replacem" & _
  "ent table is incomplete" & vbCrLf & "   Tags that can have numbers may need further entries" & vbCrLf & "   Excludes: Peripherals & Study Bible Content" & vbCrLf & "   " & vbCrLf & "   Of these possibilities " & _
  "to name tag pairs" & vbCrLf & "     begin ... end     (story  metaphor) " & vbCrLf & "     open  ... clo" & _
  "se   (gate   metaphor)" & vbCrLf & "     start ... finish  (race   metaphor)" & vbCrLf & "     start ..." & _
  " stop    (action metaphor)" & vbCrLf & "   I have chosen the first convention." & vbCrLf & "   The USFM " & _
  "Reference is not 100% consistent." & vbCrLf )
  TPWindow.startSubfilters
  f3 = TPWindow.addSelectionFilter2( 13, "-0 .. -0", 3, false, false, false, 1, "", false )
  f3 = TPWindow.addSelectionFilter2( 4, "-0 .. -0", 1, false, true, false, 1, "", false )
   TPWindow.startSubfilters
   f4 = TPWindow.addReplaceListFilter( "C:\Users\David\TextPipe Filters\USFM tag descriptions.tab", 1, true, true, false, false, false, false, false, true, true, false )
TPWindow.setPerl 4096, false, false, falsetrue
TPWindow.endSubfilters

TPWindow.endSubfilters

 f2 = TPWindow.addCommentFilter( "Invalid tag descriptions" & vbCrLf & vbCrLf & " - descriptions ending with an asterix are invalid" & vbCrLf & _
  "   because the asterisk should have been replaced" )
  TPWindow.startSubfilters
  f3 = TPWindow.addSelectionFilter2( 4, "3 .. +1", 1, false, false, false, 1, "", false )
   TPWindow.startSubfilters
   f4 = TPWindow.addReplaceFilter( "(.+)\*", "### SYNTAX ERROR ###", 1, true, false, false, false, false, false, false, 0 )
TPWindow.setPerl 4096, true, false, false, true

TPWindow.endSubfilters

TPWindow.endSubfilters

TPWindow.endSubfilters

TPWindow.outputMode = 1
TPWindow.outputRetainDate = false
TPWindow.outputTestMode = 0
TPWindow.outputAppend = false
TPWindow.outputOnlyOutputChangedFiles = 1
TPWindow.outputOpenOutputOnCompletion = true
TPWindow.outputExtension = "@inputExtension.tags.count.txt"
TPWindow.outputFolder = "@inputPath\Tags\"
TPWindow.outputKeepStructure = false
TPWindow.ignoreStartFolder = false
TPWindow.outputRemoveEmpty = false
TPWindow.endFilters


'File List:
TPWindow.clearAllFiles

end sub   'End subroutine 


sub vb_generate_filter()

  vb_connectTextPipe
  vb_build_filter( TPWindow )
  if TPWindow.execute = false then MsgBox "ERROR " & vbCrLF & TPWindow.errorText
  vb_disconnectTextPipe

end sub   'End subroutine 


' 3) Use this code to build the filter from scratch and process a form field

sub vb_filter_string()

  vb_connectTextPipe
  vb_build_filter( TPWindow )
  form1.output.value = TPWindow.processString( form1.input.value )
  vb_disconnectTextPipe

end sub   'End subroutine 


'Uncomment the following line to load the filter
'  vb_load_filter()
'Uncomment the following line to generate the filter
'  vb_generate_filter()
